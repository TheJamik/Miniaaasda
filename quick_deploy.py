#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram App –Ω–∞ Vercel
"""

import os
import subprocess
import sys

def check_node():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Node.js"""
    try:
        result = subprocess.run(['node', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {result.stdout.strip()}")
            return True
    except FileNotFoundError:
        print("‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def install_vercel():
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vercel CLI"""
    try:
        print("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vercel CLI...")
        subprocess.run(['npm', 'install', '-g', 'vercel'], check=True)
        print("‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Vercel CLI")
        return False

def deploy_to_vercel():
    """–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ Vercel"""
    try:
        print("üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel...")
        print("üìã –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º vercel
        subprocess.run(['vercel', '--prod'], check=True)
        
        print("‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è")
        return False

def create_vercel_config():
    """–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vercel"""
    config = '''{
  "version": 2,
  "builds": [
    {
      "src": "telegram_app.py",
      "use": "@vercel/python"
    }
  ],
  "routes": [
    {
      "src": "/(.*)",
      "dest": "telegram_app.py"
    }
  ],
  "env": {
    "PYTHONPATH": "."
  }
}'''
    
    with open('vercel.json', 'w') as f:
        f.write(config)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω vercel.json")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram App")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
    if not check_node():
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org/")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    create_vercel_config()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Vercel CLI
    if not install_vercel():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vercel CLI")
        return
    
    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º
    if deploy_to_vercel():
        print("\n" + "=" * 50)
        print("üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
        print("3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /newapp")
        print("4. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
        print("5. –í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL")
        print("6. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∫–æ–Ω–∫—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

if __name__ == "__main__":
    main()
