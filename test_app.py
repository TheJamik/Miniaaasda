#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Finance Tracker
"""

import requests
import json
import time

def test_app():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    base_url = "http://localhost:8080"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Finance Tracker Web App")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    try:
        response = requests.get(f"{base_url}/health")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –°—Ç–∞—Ç—É—Å: {data['status']}")
            print(f"   –í–µ—Ä—Å–∏—è: {data['version']}")
            print(f"   –í—Ä–µ–º—è: {data['timestamp']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    try:
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    try:
        response = requests.get(f"{base_url}/api/categories")
        if response.status_code == 200:
            categories = response.json()
            print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:")
            print(f"   –†–∞—Å—Ö–æ–¥—ã: {len(categories.get('expenses', {}))} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            print(f"   –î–æ—Ö–æ–¥—ã: {len(categories.get('income', {}))} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    test_user_id = "test_user_123"
    try:
        response = requests.get(f"{base_url}/api/user/{test_user_id}")
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:")
            print(f"   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(user_data.get('transactions', []))}")
            print(f"   –í–∞–ª—é—Ç–∞: {user_data.get('currency', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    try:
        response = requests.get(f"{base_url}/api/statistics/{test_user_id}")
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
            print(f"   –î–æ—Ö–æ–¥—ã: {stats.get('total_income', 0)}")
            print(f"   –†–∞—Å—Ö–æ–¥—ã: {stats.get('total_expenses', 0)}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {stats.get('balance', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 6: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    print("\n6. –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
    test_transaction = {
        "user_id": test_user_id,
        "type": "income",
        "category": "salary",
        "amount": 50000.0,
        "description": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞"
    }
    
    try:
        response = requests.post(
            f"{base_url}/api/transaction",
            json=test_transaction,
            headers={"Content-Type": "application/json"}
        )
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞:")
            print(f"   ID: {result.get('transaction', {}).get('id', 'N/A')}")
            print(f"   –°—É–º–º–∞: {result.get('transaction', {}).get('amount', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üí° –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: {base_url}")
    print("üìñ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ README_APP.md")

if __name__ == "__main__":
    test_app()
